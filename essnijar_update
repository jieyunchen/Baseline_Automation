#! /usr/bin/perl
use Getopt::Long;
use File::stat;
use Time::Local;

$javahome = "/DSCLI/lib";
$GSAserver = "kolvick.tucson.ibm.com";
@java_jars = ("dscli.jar","logger.jar", "ESSNIClient.jar","dsclihelp.jar");

# Try to get GSA ID/Password and the sandbox name
GetOptions ("user=s"	 => \$GSAID,
            "passwd=s"   => \$passwd,
            "sandbox=s"  => \$sandboxname,
            "help"       => \$help );

&usage if ( defined $help );

#Try to delete jar first and then copy from GSA server.
if ($GSAID && $passwd && $sandboxname) {
	foreach $jar (@java_jars) {
		#try to delete the jar first
		if (-e "$javahome/$jar") {
			`rm -rf $javahome/$jar`;
			if ($? != 0) {
				warn "Delete the jar failed.\n";
			}
		}
		#try to get the jar from GSA server
		$jardir = "/gsa/tucgsa/projects/m/mmbuild/$sandboxname/Base.cli/cli/lib";
		`ncftpget -u $GSAID -p $passwd $GSAserver $javahome $jardir/$jar > /dev/null 2>&1`;
		if ($?) {
			warn "Failed to get $jar\n";
			exit 1;
		} else {
			warn "Get the $jar successfully\n";
		}
	}
	#make sure the jar update is successfully 
	$javacmd = `java -jar $javahome/ESSNIClient.jar`;
        chomp ($javacmd);
	warn "$javacmd\n";
	if ($? == 0) {
		if ($javacmd =~ /$sandboxname/) {
			warn "the jar files sandbox info is equal to $sandboxname\n";
		} else {
			warn "this jar files sandbox info is $javacmd\n";
		}
	}
}
 
sub usage {
    print "\n";
    print "essnijar_update: update the jar files in /DSCLI/lib. \n";
    print "essnijar_update -u <gsa_id> -p <gsa_passwd> -s <sandboxname>\n";
    print "\n";
    print "Examples:\n";
    print "\n";
    print "essnijar_update -u clclchen -p password -s R18g.8b151206a.\n";
    exit 0;
}
